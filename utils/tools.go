package utils

import (
	"fmt"
	"log"
	"os"
	"path/filepath"
	"runtime"
)

func ErrorRecover() {
	if err := recover(); err != nil {
		var buf = make([]byte, 1<<10)
		runtime.Stack(buf, false)
		Log(ERRO, fmt.Sprintf("%v\n%s", err, string(buf)))
	}
}

// generated by GPT4
func ProjectRoot() string {
	// 获取当前执行文件的路径
	exe, err := os.Executable()
	if err != nil {
		log.Fatalf("Cannot find executable path: %v", err)
	}

	// 遍历从当前目录到根目录的所有目录
	for dir := filepath.Dir(exe); dir != ""; dir = filepath.Dir(dir) {
		// 检查这个目录是否包含 go.mod 文件
		if _, err := os.Stat(filepath.Join(dir, "go.mod")); err == nil {
			return dir
		}
	}

	// 如果找不到 go.mod 文件，返回空字符串
	return ""
}
